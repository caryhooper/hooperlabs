<html>

<?php include '../header.php';?>

<body>

<?php include '../navbar.php';?>

<div class="body-content">
    <h2>
        Reflected XSS in CSS Hero WordPress Plugin (<= v.4.0.3)
    </h2>
    <div class="center">
     <div class="centre">
        <img class="headrepic" src="https://pluginsroom.com/assets/img/wordpress-plugins.png" alt="Hack the Planet" height="100px" width="100px" align="middle">
    </div>
    </div>
    <p class="date">2019-12-02</p>
    <h3>Background</h3>
    <p class="text">
        The CSS Hero plugin for WordPress was prone to a cross-site scripting vulnerability because it failed to sufficiently sanitize user-supplied input.  
        An attacker could leverage this issue to execute arbitrary JavaScript within an authenticated user's browser.  
        This may allow the attacker to steal cookie-based authentication credentials or launch other attacks.  CSS Hero 4.0.2 and 4.0.3 are vulnerable.  Other versions may be affected. 
    </p>
    <p class="text">
        Download Link: <a href="https://www.csshero.org">CSS Hero</a>
    </p>
    <p class="text">
        Vulnerable versions: v.4.0.3 and prior.  
    </p>
        <a id="CVE-2019-19133"><h4>Vulnerability - Authenticated Reflected XSS (CVE-2019-19133)</h4></a>
        <p class="text">
            A reflected XSS vulnerability exists after authentication within the CSS Hero "csshero_action=edit_page" functionality. The application accepted arbitary parameters, which it reflected into the DOM 
            as HTML or JavaScript.
        </p>
        <h4>Steps:</h4>
        <ol>
            <li>Authenticate to a WordPress application with CSS Hero 4.0.3 plugin installed (hxxps://example.wordpress.com).</li>
            <li>Browse to the payload URL with a malicious parameter: hxxps://example.wordpress.com/?csshero_action=edit_page&rand=1015&foo%22%3e%3c%2fiframe%3e%3cscript%3calert(%27Reflected%20XSS%20in%20CSS%20Hero%204.0.3%27)%3c%2fscript%3e%3ciframe%3e</li>
            <li>Observe that JavaScript executes within the browser.</li>
        </ol>
        <img class="body-img" src="/img/cssheroXSS.png" width="60%">
        <p class="text">
            The CSS Hero demo website ("playground") was also vulnerable to an unauthenticated version of this attack:  
        </p>
        <img class="body-img" src="/img/cssherodemoXSS.png" width="40%">
        <h4>Testing Conditions:</h4>
        <ul>
            <li>Firefox v73.0.1</li>
            <li>WordPress 5.2.1</li>
        </ul>
    </div>
     <?php include 'policy.php';?>
</body>

<?php include '../footer.php';?>

</html>
