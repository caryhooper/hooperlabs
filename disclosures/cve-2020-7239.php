<html>

<?php include '../header.php';?>

<body>

<?php include '../navbar.php';?>

<div class="body-content">
    <h2>
        DOM XSS in Chatbot with IBM Watson WordPress Plugin (<= v.0.8.20)
    </h2>
    <div class="center">
        <img class="headerpic" src="https://s.w.org/style/images/about/WordPress-logotype-wmark.png" alt="Hack the Planet" height="50px" width="50px">
    </div>
    <p class="date">2020-01-20</p>
    <h3>Background</h3>
    <p class="text">
        Chatbot with IBM Watson is a plugin for WordPress allowing administrators to include a "chatbot" functionality to interface with the Watson service in the IBM Cloud.  It was developed by IBM Cognitive Class and has at least 2,000 active installations.  
    </p>
    <p class="text">
        Download Link: <a href="https://wordpress.org/plugins/conversation-watson/#description">Chatbot with IBM Watson</a>
    </p>

        <h4>Vulnerability - CVE-2020-7239</h4>
        <p class="text">
            A DOM based XSS vulnerability has been identified in the chat functionality of the Watson Assistant plugin for WordPress, allowing a remote attacker to execute JavaScript in the victims browser by tricking the victim into pasting HTML inside the chat box.
        </p>
        <h4>Steps:</h4>
        <ol>
            <li>Locate a fresh WordPress installation.</li>
            <li>Download the IBM Watson Assistant WordPress Plugin.</li>
            <li>Install the plugin and follow the steps to set up, including but not limited to: a) create an IBM account, b) launch Watson assistant, c) view the API details, and d) integrate the API key and URL within the plugin.</li>
            <li>Within Firefox, ensure the ChatBot is enabled and observe that the ChatBot appears on the home page.</li>
            <li>Type the following into the chat interface:&lt;svg//onload=alert(“XSS”)&gt;</li>
            <li>Observe that a pop-up appears, indicating that JavaScript executed within the browser.</li>
            <li>Alternatively, open the browser’s developer tools’ network viewer while invoking XSS and observe that the XSS does not result from network traffic.</li>
        </ol>
        <img src="../img/ChatbotXSS.png" width=20%>
        <h4>Browsers Verified In:</h4>
        <ul>
            <li>Firefox v70.0.1</li>
            <li>Chrome v 78.0.3904.97</li>
        </ul>

    </div>
</body>

<?php include '../footer.php';?>

</html>
